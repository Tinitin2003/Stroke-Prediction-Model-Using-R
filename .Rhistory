percentage <- prop.table(table(dataset$stroke)) * 100
cbind(freq=table(dataset$stroke), percentage=percentage)
#   # Run algorithms using 10-fold cross validation
# control <- trainControl(method="cv", number=10)
# metric <- "Accuracy"
# # a) linear algorithms
# #set.seed(7)
# #fit.lda <- train(stroke~., data=dataset, method="lda", metric=metric, trControl=control)
# # b) nonlinear algorithms
# # CART
# set.seed(7)
# fit.cart <- train(stroke~., data=dataset, method="rpart", metric=metric, trControl=control)
# # kNN
# set.seed(7)
# fit.knn <- train(stroke~., data=dataset, method="knn", metric=metric, trControl=control)
# # c) advanced algorithms
# # SVM
# set.seed(7)
# fit.svm <- train(stroke~., data=dataset, method="svmRadial", metric=metric, trControl=control)
# # Random Forest
# set.seed(7)
# fit.rf <- train(stroke~., data=dataset, method="rf", metric=metric, trControl=control)
#   # Run algorithms using 10-fold cross validation
# control <- trainControl(method="cv", number=10)
# metric <- "Accuracy"
# # a) linear algorithms
# #set.seed(7)
# #fit.lda <- train(stroke~., data=dataset, method="lda", metric=metric, trControl=control)
# # b) nonlinear algorithms
# # CART
# set.seed(7)
# fit.cart <- train(stroke~., data=dataset, method="rpart", metric=metric, trControl=control)
# # kNN
# set.seed(7)
# fit.knn <- train(stroke~., data=dataset, method="knn", metric=metric, trControl=control)
# # c) advanced algorithms
# # SVM
# set.seed(7)
# fit.svm <- train(stroke~., data=dataset, method="svmRadial", metric=metric, trControl=control)
# # Random Forest
# set.seed(7)
# fit.rf <- train(stroke~., data=dataset, method="rf", metric=metric, trControl=control)
# # summarize accuracy of models
# results <- resamples(list(lda=fit.lda, cart=fit.cart, knn=fit.knn, svm=fit.svm, rf=fit.rf))
# summary(results)
#   # Run algorithms using 10-fold cross validation
# control <- trainControl(method="cv", number=10)
# metric <- "Accuracy"
# # a) linear algorithms
# #set.seed(7)
# #fit.lda <- train(stroke~., data=dataset, method="lda", metric=metric, trControl=control)
# # b) nonlinear algorithms
# # CART
# set.seed(7)
# fit.cart <- train(stroke~., data=dataset, method="rpart", metric=metric, trControl=control)
# # kNN
# set.seed(7)
# fit.knn <- train(stroke~., data=dataset, method="knn", metric=metric, trControl=control)
# # c) advanced algorithms
# # SVM
# set.seed(7)
# fit.svm <- train(stroke~., data=dataset, method="svmRadial", metric=metric, trControl=control)
# # Random Forest
# set.seed(7)
# fit.rf <- train(stroke~., data=dataset, method="rf", metric=metric, trControl=control)
# # summarize accuracy of models
# results <- resamples(list(lda=fit.lda, cart=fit.cart, knn=fit.knn, svm=fit.svm, rf=fit.rf))
# summary(results)
# summarize attribute distributions
summary(dataset)
dim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
# summarize the class distribution
percentage <- prop.table(table(dataset$stroke)) * 100
cbind(freq=table(dataset$stroke), percentage=percentage)
# summarize attribute distributions
summary(dataset)
dim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
summary(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
library(("skim"))
library(skim)
library(skimr)
install.packages(skimr)
library(skimr)
install.packages("skimr")
library(skimr)
filename<-"healthcare-dataset-stroke-data.csv"
dataset <- read.csv(filename,header = TRUE)
str(dataset)
install.packages("skimr")
library(skimr)
filename<-"healthcare-dataset-stroke-data.csv"
dataset <- read.csv(filename,header = TRUE)
str(dataset)
install.packages("skimr")
library(skimr)
filename<-"healthcare-dataset-stroke-data.csv"
dataset <- read.csv(filename,header = TRUE)
str(dataset)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
install.packages("tidyverse")
library(dplyr)
library(readr)
library(skimr)
filename<-"healthcare-dataset-stroke-data.csv"
dataset <- read.csv(filename,header = TRUE)
str(dataset)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
dataset<-
select(dataset,-id)%>%
#observe first rows
head(dataset)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
dataset<-
select(dataset,-id) %>%
#observe first rows
head(dataset)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
dataset<-
select(dataset,-id)
#observe first rows
head(dataset)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
dataset<-
select(dataset,-id)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
dataset<-
select(dataset,-id)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
install.packages("DataExplorer")
library(DataExplorer)
dataset %>%
create_report(
output_file = paste("Report", format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"), sep=" - "),
report_title = "EDA Report - Cardiovascular Disease Dataset",
y = "cardio"
)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
#install.packages("DataExplorer")
library(DataExplorer)
dataset %>%
create_report(
output_file = paste("Report", format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"), sep=" - "),
report_title = "EDA Report - Cardiovascular Disease Dataset",
y = "stroke"
)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
#install.packages("DataExplorer")
library(DataExplorer)
plot_str(dataset)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
#install.packages("DataExplorer")
library(DataExplorer)
plot_str(dataset)
plot_bar(dataset)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
#install.packages("DataExplorer")
library(DataExplorer)
plot_str(dataset)
plot_bar(dataset)
plot_bar(df, by="stroke")
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
#install.packages("DataExplorer")
library(DataExplorer)
plot_str(dataset)
plot_bar(dataset)
plot_bar(df, by=stroke)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
#install.packages("DataExplorer")
library(DataExplorer)
plot_str(dataset)
plot_bar(dataset)
plot_bar(dataset, by=stroke)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
#install.packages("DataExplorer")
library(DataExplorer)
plot_str(dataset)
plot_bar(dataset)
plot_bar(dataset, by="stroke")
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
#install.packages("DataExplorer")
library(DataExplorer)
plot_str(dataset)
plot_bar(dataset)
plot_bar(dataset, by="stroke")
plot_qq(dataset)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
#install.packages("DataExplorer")
library(DataExplorer)
plot_str(dataset)
plot_bar(dataset)
plot_bar(dataset, by="stroke")
plot_qq(dataset)
plot_correlation(df)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
#install.packages("DataExplorer")
library(DataExplorer)
plot_str(dataset)
plot_bar(dataset)
plot_bar(dataset, by="stroke")
plot_qq(dataset)
plot_correlation(dataset)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
#install.packages("DataExplorer")
library(DataExplorer)
plot_str(dataset)
plot_bar(dataset)
plot_bar(dataset, by="stroke")
plot_qq(dataset)
plot_correlation(dataset)
plot_prcomp(df)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
#install.packages("DataExplorer")
library(DataExplorer)
plot_str(dataset)
plot_bar(dataset)
plot_bar(dataset, by="stroke")
plot_qq(dataset)
plot_correlation(dataset)
plot_prcomp(dataset)
#dimension of dataset
dim(dataset)
#summarize attribute distributions
skim(dataset)
# list types for each attribute
sapply(dataset, class)
# take a peek at the first 5 rows of the data
head(dataset)
# list the levels for the class
unique(dataset$stroke)
#remove the id
#dataset<-
#  select(dataset,-id)
#observe first rows
head(dataset)
#install.packages("DataExplorer")
library(DataExplorer)
plot_str(dataset)
plot_bar(dataset)
plot_bar(dataset, by="stroke")
plot_qq(dataset)
#plot_density(df) plots density estimates for each continuous feature
plot_density(dataset)
#plot_correlation(df) to visualize correlation heatmap
plot_correlation(dataset)
#plot_prcomp(df) performs Principal Component Analysis (PCA) and plots the percentage of variance explained by each principal component
plot_prcomp(dataset)
